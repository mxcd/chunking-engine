// Code generated by ent, DO NOT EDIT.

package chunk

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the chunk type in the database.
	Label = "chunk"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldT holds the string denoting the t field in the database.
	FieldT = "t"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// Table holds the table name of the chunk in the database.
	Table = "chunks"
)

// Columns holds all SQL columns for chunk fields.
var Columns = []string{
	FieldID,
	FieldT,
	FieldName,
	FieldData,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultData holds the default value on creation for the "data" field.
	DefaultData []byte
)

// OrderOption defines the ordering options for the Chunk queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByT orders the results by the t field.
func ByT(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldT, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}
